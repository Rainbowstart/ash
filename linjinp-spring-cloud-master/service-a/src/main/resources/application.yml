#配置端口号
server:
  port: 8080

spring:
  application:
    #配置服务名
    name: service-a
  profiles:
    active: sit

  #Druid 连接池通用配置
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      # 下面为连接池的补充设置，应用到上面所有数据源中
#      # 初始化大小，最小，最大
#      initial-size: 5
#      min-idle: 5
#      max-active: 20
#      # 配置获取连接等待超时的时间
#      max-wait: 60000
#      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      time-between-eviction-runs-millis: 60000
#      # 配置一个连接在池中最小生存的时间，单位是毫秒
#      min-evictable-idle-time-millis: 300000
#      validation-query: select 1
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      # 打开PSCache，并且指定每个连接上PSCache的大小
#      pool-prepared-statements: true
#      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      max-pool-prepared-statement-per-connection-size: 20
#      filters: stat # wall 若开启 wall，会把 if 中的 and 判断为注入进行拦截
#      use-global-data-source-stat: true
#      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 配置监控服务器
##      stat-view-servlet:
##        login-username: admin
##        login-password: 123456
##        reset-enable: false
##        url-pattern: /druid/*
##        # 添加IP白名单
##        #allow:
##        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
##        #deny:
##      web-stat-filter:
##        # 添加过滤规则
##        url-pattern: /*
##        # 忽略过滤格式
##        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
#
##配置xml映射
#mybatis:
#  mapper-locations: mapper/*/*.xml, classpath*:mapper/*.xml
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#
##Actuator配置开放所有端点
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  endpoint:
#    health:
#      show-details: always
#
##pageHelper 分页插件
#pagehelper:
#  helperDialect: mysql
#  reasonable: true
#  supportMethodsArguments: true
#  pageSizeZero: true
#  params: count=countSql
#
#name: jack
#age: 18
#content: "name：${name}，age：${age}"
#
#student:
#  name: tom
#  age: 25

---
#本地/测试服配置
spring:
  profiles: sit

#  datasource:
#    url: jdbc:mysql://118.25.215.105:1234/test
#    username: root
#    password: MydnLmKHotFzcbM3/jKN6j7j4MqgzxYsGv32wZ1QKSzdHWB44sOn6VGwbLqCs1YFVZM3v5kTcHpIQ18zKL6DOw==
#    publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIyb6+/M6yqU7NwSf8bdlZP4K09ohHMCsJOhrwpywaFm9Qv0iFL1+9DNcoiiT4KD8cLXlgUkx0Py6/GNyi9jrCUCAwEAAQ==
#    driver-class-name: com.mysql.jdbc.Driver
##  #Redis配置
##  redis:
##    host: xxxx #redis 地址
##    password: xxxx
##    port: 6379
##    sentinel:
##      master: mymaster
##      nodes: xxxx,xxxx #redis 多节点地址
##    lettuce:
##      pool:
##        min-idle: 0
##        max-idle: 8
##        max-wait: -1ms
##        max-active: 8
##      shutdown-timeout: 100ms
#
##eureka配置
#eureka:
#  client:
#    service-url:
##      defaultZone: http://118.25.215.105:8001/eureka/,http://118.25.215.105:8002/eureka/,http://118.25.215.105:8003/eureka/  #eureka 集群地址
#      defaultZone: http://eureka.didispace.com/eureka
#    #间隔多少秒去服务端拉去注册信息
#    registry-fetch-interval-seconds: 10
#  instance:
#    #发送心跳给server端频率
#    lease-renewal-interval-in-seconds: 30
#    #健康检查地址
#    health-check-url-path: /actuator/health
#    prefer-ip-address: true

---

#正式服配置
spring:
  profiles: prod

#  datasource:
#    url: jdbc:mysql://118.25.215.105:1234/test
#    username: root
#    password: MydnLmKHotFzcbM3/jKN6j7j4MqgzxYsGv32wZ1QKSzdHWB44sOn6VGwbLqCs1YFVZM3v5kTcHpIQ18zKL6DOw==
#    publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIyb6+/M6yqU7NwSf8bdlZP4K09ohHMCsJOhrwpywaFm9Qv0iFL1+9DNcoiiT4KD8cLXlgUkx0Py6/GNyi9jrCUCAwEAAQ==
#    driver-class-name: com.mysql.jdbc.Driver
#  #Redis配置
##  redis:
##    lettuce:
##      pool:
##        min-idle: 0
##        max-idle: 8
##        max-wait: -1ms
##        max-active: 8
##      shutdown-timeout: 100ms
##    cluster:
##      nodes: xxxx,xxxx #redis 多节点地址
#
##eureka配置
#eureka:
#  client:
#    service-url:
##      defaultZone: http://118.25.215.105:8001/eureka/,http://118.25.215.105:8002/eureka/,http://118.25.215.105:8003/eureka/  #eureka 集群地址
#      defaultZone: http://eureka.didispace.com/eureka
#    #间隔多少秒去服务端拉去注册信息
#    registry-fetch-interval-seconds: 10
#  instance:
#    #发送心跳给server端频率
#    lease-renewal-interval-in-seconds: 30
#    #健康检查地址
#    health-check-url-path: /actuator/health
#    prefer-ip-address: true